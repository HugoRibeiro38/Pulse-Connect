// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PulseConnect.Data;

#nullable disable

namespace PulseConnect.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20231114193138_CreateSessionTable")]
    partial class CreateSessionTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PulseConnect.Models.Session", b =>
                {
                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Session ID");

                    b.Property<DateTime?>("SessionEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Session End Time");

                    b.Property<DateTime>("SessionStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Session Start Time");

                    b.Property<string>("SessionToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Session Token");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("User ID");

                    b.HasKey("SessionID");

                    b.HasIndex("UserID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("PulseConnect.Models.Users", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("BIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BIO");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<DateTime>("Date_Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("Gender");

                    b.Property<DateTime>("Last_Active")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Active");

                    b.Property<string>("Multi_FactorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Multi_FactorCode");

                    b.Property<bool>("Multi_FactorEnable")
                        .HasColumnType("bit")
                        .HasColumnName("Multi_FactorEnable");

                    b.Property<DateTime>("Multi_FactorExpired")
                        .HasColumnType("datetime2")
                        .HasColumnName("Multi_FactorExpired");

                    b.Property<int>("Multi_FactorType")
                        .HasColumnType("int")
                        .HasColumnName("Multi_FactorType");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Profile_Picture_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Profile_Picture_URL");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserName");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PulseConnect.Models.Session", b =>
                {
                    b.HasOne("PulseConnect.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
